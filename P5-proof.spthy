theory P5 begin

// Function signature and definition of the equational theory E

builtins: diffie-hellman
functions: fst/1, h/1, kdf/3, map/2, pair/2, sdec/2, senc/2, snd/1,
           tag/2
equations:
    fst(<x.1, x.2>) = x.1,
    sdec(senc(x.1, x.2), x.2) = x.1,
    snd(<x.1, x.2>) = x.2









rule (modulo E) Keygen:
   [ Fr( ~k ) ] --[ Gen( $A, $B, ~k ) ]-> [ !Ltk( $A, $B, ~k ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Rev:
   [ !Ltk( A, B, k ) ] --[ Reveal( A ) ]-> [ Out( k ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Init_I:
   [ Fr( ~id ), !Ltk( A, B, kab ) ]
  --[ Create_I( A, ~id ) ]->
   [ St_I_1( A, ~id, B, kab ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Init_R:
   [ Fr( ~id ), !Ltk( A, B, kab ) ]
  --[ Create_R( B, ~id ) ]->
   [ St_R_1( B, ~id, A, kab ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) I_send1:
   [ Fr( ~x ), Fr( ~s ), Fr( ~p ), St_I_1( A, id, B, kab ) ]
  -->
   [
   St_I_2( A, id, B, kab, ~x, ~s, ~p ),
   Out( <map(~s, ~p)^~x, ~p, senc(~s, h(kab))> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) R_recv1:
   [ In( <gx, p, c> ), St_R_1( B, id, A, kab ) ]
  --[ NotEq( gx, one ) ]->
   [ St_R_2( B, id, A, kab, gx, sdec(c, h(kab)), p ) ]

  /*
  rule (modulo AC) R_recv1:
     [ In( <gx, p, c> ), St_R_1( B, id, A, kab ) ]
    --[ NotEq( gx, one ) ]->
     [ St_R_2( B, id, A, kab, gx, z, p ) ]
    variants (modulo AC)
    1. c     = c.9
       kab   = kab.9
       z     = sdec(c.9, h(kab.9))
    
    2. c     = senc(x.9, h(x.10))
       kab   = x.10
       z     = x.9
  */

rule (modulo E) R_send2:
   [ Fr( ~y ), St_R_2( B, id, A, kab, gx, s, p ) ]
  --[ Running( B, A, <'I', 'R', gx, map(s, p)^~y, h(gx^~y)> ) ]->
   [
   St_R_3( B, id, A, kab, gx, s, p, ~y, h(gx^~y) ),
   Out( map(s, p)^~y )
   ]

  /*
  rule (modulo AC) R_send2:
     [ Fr( ~y ), St_R_2( B, id, A, kab, gx, s, p ) ]
    --[ Running( B, A, <'I', 'R', gx, map(s, p)^~y, h(z)> ) ]->
     [ St_R_3( B, id, A, kab, gx, s, p, ~y, h(z) ), Out( map(s, p)^~y )
     ]
    variants (modulo AC)
    1. ~y    = ~y.25
       gx    = gx.28
       z     = gx.28^~y.25
    
    2. ~y    = ~y.26
       gx    = z.34^inv(~y.26)
       z     = z.34
    
    3. ~y    = ~y.128
       gx    = x.253^x.254
       z     = x.253^(~y.128*x.254)
    
    4. ~y    = ~y.131
       gx    = x.259^inv((~y.131*x.260))
       z     = x.259^inv(x.260)
    
    5. ~y    = ~y.131
       gx    = x.259^(x.260*inv(~y.131))
       z     = x.259^x.260
    
    6. ~y    = ~y.132
       gx    = x.260^(x.261*inv((~y.132*x.262)))
       z     = x.260^(x.261*inv(x.262))
    
    7. gx    = DH_neutral
       z     = DH_neutral
  */

rule (modulo E) I_recv2:
   [ In( gy ), St_I_2( A, id, B, kab, x, s, p ) ]
  --[
  NotEq( gy, one ),
  Running( A, B, <'R', 'I', map(s, p)^x, gy, h(gy^x)> )
  ]->
   [ St_I_3( A, id, B, kab, x, s, p, gy, h(gy^x) ) ]

  /*
  rule (modulo AC) I_recv2:
     [ In( gy ), St_I_2( A, id, B, kab, x, s, p ) ]
    --[ NotEq( gy, one ), Running( A, B, <'R', 'I', z.1, gy, h(z)> )
    ]->
     [ St_I_3( A, id, B, kab, x, s, p, gy, h(z) ) ]
    variants (modulo AC)
     1. gy    = gy.18
        p     = p.21
        s     = s.22
        x     = one
        z     = gy.18
        z.1   = map(s.22, p.21)
    
     2. gy    = gy.19
        p     = p.22
        s     = s.23
        x     = x.24
        z     = gy.19^x.24
        z.1   = map(s.23, p.22)^x.24
    
     3. gy    = DH_neutral
        p     = p.16
        s     = s.17
        x     = x.18
        z     = DH_neutral
        z.1   = map(s.17, p.16)^x.18
    
     4. gy    = z.20^inv(x.19)
        p     = p.17
        s     = s.18
        x     = x.19
        z     = z.20
        z.1   = map(s.18, p.17)^x.19
    
     5. gy    = z.25^x.37
        p     = p.22
        s     = s.23
        x     = inv(x.37)
        z     = z.25
        z.1   = map(s.23, p.22)^inv(x.37)
    
     6. gy    = z.26^(x.38*inv(x.39))
        p     = p.23
        s     = s.24
        x     = (x.39*inv(x.38))
        z     = z.26
        z.1   = map(s.24, p.23)^(x.39*inv(x.38))
    
     7. gy    = x.36^x.37
        p     = p.22
        s     = s.23
        x     = x.24
        z     = x.36^(x.24*x.37)
        z.1   = map(s.23, p.22)^x.24
    
     8. gy    = x.36^inv((x.24*x.37))
        p     = p.22
        s     = s.23
        x     = x.24
        z     = x.36^inv(x.37)
        z.1   = map(s.23, p.22)^x.24
    
     9. gy    = x.36^(x.37*inv(x.24))
        p     = p.22
        s     = s.23
        x     = x.24
        z     = x.36^x.37
        z.1   = map(s.23, p.22)^x.24
    
    10. gy    = x.37^(x.38*x.39)
        p     = p.23
        s     = s.24
        x     = inv(x.38)
        z     = x.37^x.39
        z.1   = map(s.24, p.23)^inv(x.38)
    
    11. gy    = x.37^(x.38*inv((x.25*x.39)))
        p     = p.23
        s     = s.24
        x     = x.25
        z     = x.37^(x.38*inv(x.39))
        z.1   = map(s.24, p.23)^x.25
    
    12. gy    = x.38^(x.39*x.40*inv(x.41))
        p     = p.24
        s     = s.25
        x     = (x.41*inv(x.40))
        z     = x.38^x.39
        z.1   = map(s.25, p.24)^(x.41*inv(x.40))
    
    13. gy    = x.38^(x.39*inv((x.40*x.41)))
        p     = p.24
        s     = s.25
        x     = (x.41*inv(x.39))
        z     = x.38^inv(x.40)
        z.1   = map(s.25, p.24)^(x.41*inv(x.39))
    
    14. gy    = x.39^(x.40*x.41*inv((x.42*x.43)))
        p     = p.25
        s     = s.26
        x     = (x.43*inv(x.41))
        z     = x.39^(x.40*inv(x.42))
        z.1   = map(s.26, p.25)^(x.43*inv(x.41))
    
    15. gy    = x.41^x.42
        p     = p.27
        s     = s.28
        x     = inv((x.42*x.47))
        z     = x.41^inv(x.47)
        z.1   = map(s.28, p.27)^inv((x.42*x.47))
    
    16. gy    = x.41^x.42
        p     = p.27
        s     = s.28
        x     = (x.47*inv(x.42))
        z     = x.41^x.47
        z.1   = map(s.28, p.27)^(x.47*inv(x.42))
    
    17. gy    = x.41^inv(x.42)
        p     = p.27
        s     = s.28
        x     = inv(x.47)
        z     = x.41^inv((x.42*x.47))
        z.1   = map(s.28, p.27)^inv(x.47)
    
    18. gy    = x.41^inv(x.42)
        p     = p.27
        s     = s.28
        x     = (x.42*x.47)
        z     = x.41^x.47
        z.1   = map(s.28, p.27)^(x.42*x.47)
    
    19. gy    = x.42^x.43
        p     = p.28
        s     = s.29
        x     = (x.48*inv((x.43*x.49)))
        z     = x.42^(x.48*inv(x.49))
        z.1   = map(s.29, p.28)^(x.48*inv((x.43*x.49)))
    
    20. gy    = x.42^inv(x.43)
        p     = p.28
        s     = s.29
        x     = (x.48*inv(x.49))
        z     = x.42^(x.48*inv((x.43*x.49)))
        z.1   = map(s.29, p.28)^(x.48*inv(x.49))
    
    21. gy    = x.42^inv((x.43*x.44))
        p     = p.28
        s     = s.29
        x     = (x.43*x.49)
        z     = x.42^(x.49*inv(x.44))
        z.1   = map(s.29, p.28)^(x.43*x.49)
    
    22. gy    = x.42^inv((x.43*x.44))
        p     = p.28
        s     = s.29
        x     = (x.43*inv(x.49))
        z     = x.42^inv((x.44*x.49))
        z.1   = map(s.29, p.28)^(x.43*inv(x.49))
    
    23. gy    = x.42^(x.43*x.44)
        p     = p.28
        s     = s.29
        x     = inv((x.43*x.49))
        z     = x.42^(x.44*inv(x.49))
        z.1   = map(s.29, p.28)^inv((x.43*x.49))
    
    24. gy    = x.42^(x.43*x.44)
        p     = p.28
        s     = s.29
        x     = (x.49*inv(x.43))
        z     = x.42^(x.44*x.49)
        z.1   = map(s.29, p.28)^(x.49*inv(x.43))
    
    25. gy    = x.42^(x.43*inv(x.44))
        p     = p.28
        s     = s.29
        x     = inv(x.49)
        z     = x.42^(x.43*inv((x.44*x.49)))
        z.1   = map(s.29, p.28)^inv(x.49)
    
    26. gy    = x.42^(x.43*inv(x.44))
        p     = p.28
        s     = s.29
        x     = inv((x.43*x.49))
        z     = x.42^inv((x.44*x.49))
        z.1   = map(s.29, p.28)^inv((x.43*x.49))
    
    27. gy    = x.42^(x.43*inv(x.44))
        p     = p.28
        s     = s.29
        x     = (x.44*x.49)
        z     = x.42^(x.43*x.49)
        z.1   = map(s.29, p.28)^(x.44*x.49)
    
    28. gy    = x.42^(x.43*inv(x.44))
        p     = p.28
        s     = s.29
        x     = (x.44*x.49*inv(x.43))
        z     = x.42^x.49
        z.1   = map(s.29, p.28)^(x.44*x.49*inv(x.43))
    
    29. gy    = x.42^(x.43*inv(x.44))
        p     = p.28
        s     = s.29
        x     = (x.44*inv((x.43*x.49)))
        z     = x.42^inv(x.49)
        z.1   = map(s.29, p.28)^(x.44*inv((x.43*x.49)))
    
    30. gy    = x.43^inv((x.44*x.45))
        p     = p.29
        s     = s.30
        x     = (x.44*x.50*inv(x.51))
        z     = x.43^(x.50*inv((x.45*x.51)))
        z.1   = map(s.30, p.29)^(x.44*x.50*inv(x.51))
    
    31. gy    = x.43^(x.44*x.45)
        p     = p.29
        s     = s.30
        x     = (x.50*inv((x.44*x.51)))
        z     = x.43^(x.45*x.50*inv(x.51))
        z.1   = map(s.30, p.29)^(x.50*inv((x.44*x.51)))
    
    32. gy    = x.43^(x.44*x.45*inv(x.46))
        p     = p.29
        s     = s.30
        x     = inv((x.45*x.51))
        z     = x.43^(x.44*inv((x.46*x.51)))
        z.1   = map(s.30, p.29)^inv((x.45*x.51))
    
    33. gy    = x.43^(x.44*x.45*inv(x.46))
        p     = p.29
        s     = s.30
        x     = (x.46*x.51*inv(x.44))
        z     = x.43^(x.45*x.51)
        z.1   = map(s.30, p.29)^(x.46*x.51*inv(x.44))
    
    34. gy    = x.43^(x.44*x.45*inv(x.46))
        p     = p.29
        s     = s.30
        x     = (x.46*inv((x.44*x.51)))
        z     = x.43^(x.45*inv(x.51))
        z.1   = map(s.30, p.29)^(x.46*inv((x.44*x.51)))
    
    35. gy    = x.43^(x.44*inv(x.45))
        p     = p.29
        s     = s.30
        x     = (x.45*x.50*inv((x.44*x.51)))
        z     = x.43^(x.50*inv(x.51))
        z.1   = map(s.30, p.29)^(x.45*x.50*inv((x.44*x.51)))
    
    36. gy    = x.43^(x.44*inv(x.45))
        p     = p.29
        s     = s.30
        x     = (x.50*inv(x.51))
        z     = x.43^(x.44*x.50*inv((x.45*x.51)))
        z.1   = map(s.30, p.29)^(x.50*inv(x.51))
    
    37. gy    = x.43^(x.44*inv(x.45))
        p     = p.29
        s     = s.30
        x     = (x.50*inv((x.44*x.51)))
        z     = x.43^(x.50*inv((x.45*x.51)))
        z.1   = map(s.30, p.29)^(x.50*inv((x.44*x.51)))
    
    38. gy    = x.43^(x.44*inv((x.45*x.46)))
        p     = p.29
        s     = s.30
        x     = (x.45*x.51)
        z     = x.43^(x.44*x.51*inv(x.46))
        z.1   = map(s.30, p.29)^(x.45*x.51)
    
    39. gy    = x.43^(x.44*inv((x.45*x.46)))
        p     = p.29
        s     = s.30
        x     = (x.45*x.51*inv(x.44))
        z     = x.43^(x.51*inv(x.46))
        z.1   = map(s.30, p.29)^(x.45*x.51*inv(x.44))
    
    40. gy    = x.43^(x.44*inv((x.45*x.46)))
        p     = p.29
        s     = s.30
        x     = (x.45*inv(x.51))
        z     = x.43^(x.44*inv((x.46*x.51)))
        z.1   = map(s.30, p.29)^(x.45*inv(x.51))
    
    41. gy    = x.43^(x.44*inv((x.45*x.46)))
        p     = p.29
        s     = s.30
        x     = (x.45*inv((x.44*x.51)))
        z     = x.43^inv((x.46*x.51))
        z.1   = map(s.30, p.29)^(x.45*inv((x.44*x.51)))
    
    42. gy    = x.44^(x.45*x.46*inv(x.47))
        p     = p.30
        s     = s.31
        x     = (x.47*x.52*inv((x.45*x.53)))
        z     = x.44^(x.46*x.52*inv(x.53))
        z.1   = map(s.31, p.30)^(x.47*x.52*inv((x.45*x.53)))
    
    43. gy    = x.44^(x.45*x.46*inv(x.47))
        p     = p.30
        s     = s.31
        x     = (x.52*inv((x.45*x.53)))
        z     = x.44^(x.46*x.52*inv((x.47*x.53)))
        z.1   = map(s.31, p.30)^(x.52*inv((x.45*x.53)))
    
    44. gy    = x.44^(x.45*x.46*inv((x.47*x.48)))
        p     = p.30
        s     = s.31
        x     = (x.47*x.53*inv(x.45))
        z     = x.44^(x.46*x.53*inv(x.48))
        z.1   = map(s.31, p.30)^(x.47*x.53*inv(x.45))
    
    45. gy    = x.44^(x.45*x.46*inv((x.47*x.48)))
        p     = p.30
        s     = s.31
        x     = (x.47*inv((x.45*x.53)))
        z     = x.44^(x.46*inv((x.48*x.53)))
        z.1   = map(s.31, p.30)^(x.47*inv((x.45*x.53)))
    
    46. gy    = x.44^(x.45*inv((x.46*x.47)))
        p     = p.30
        s     = s.31
        x     = (x.46*x.52*inv(x.53))
        z     = x.44^(x.45*x.52*inv((x.47*x.53)))
        z.1   = map(s.31, p.30)^(x.46*x.52*inv(x.53))
    
    47. gy    = x.44^(x.45*inv((x.46*x.47)))
        p     = p.30
        s     = s.31
        x     = (x.46*x.52*inv((x.45*x.53)))
        z     = x.44^(x.52*inv((x.47*x.53)))
        z.1   = map(s.31, p.30)^(x.46*x.52*inv((x.45*x.53)))
    
    48. gy    = x.45^(x.46*x.47*inv((x.48*x.49)))
        p     = p.31
        s     = s.32
        x     = (x.48*x.54*inv((x.46*x.55)))
        z     = x.45^(x.47*x.54*inv((x.49*x.55)))
        z.1   = map(s.32, p.31)^(x.48*x.54*inv((x.46*x.55)))
  */

rule (modulo E) I_send3:
   [ St_I_3( A, id, B, kab, x, s, p, gy, k ) ]
  -->
   [ St_I_4( A, id, B, kab, x, s, p, gy, k ), Out( tag(k, <'I', gy>) )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) R_recv3:
   [ In( t ), St_R_3( B, id, A, kab, gx, s, p, y, k ) ]
  --[ Eq( t, tag(k, <'I', map(s, p)^y>) ) ]->
   [ St_R_4( B, id, A, kab, gx, s, p, y, k ) ]

  /*
  rule (modulo AC) R_recv3:
     [ In( t ), St_R_3( B, id, A, kab, gx, s, p, y, k ) ]
    --[ Eq( t, tag(k, <'I', z>) ) ]->
     [ St_R_4( B, id, A, kab, gx, s, p, y, k ) ]
    variants (modulo AC)
    1. p     = p.14
       s     = s.15
       y     = y.17
       z     = map(s.15, p.14)^y.17
    
    2. p     = p.14
       s     = s.15
       y     = one
       z     = map(s.15, p.14)
  */

rule (modulo E) R_send4:
   [ St_R_4( B, id, A, kab, gx, s, p, y, k ) ]
  --[
  Commit( B, A, <'R', 'I', gx, map(s, p)^y, k> ), Secret( B, A, k )
  ]->
   [ St_R_5( B, id, A, kab, gx, s, p, y, k ), Out( tag(k, <'R', gx>) )
   ]

  /*
  rule (modulo AC) R_send4:
     [ St_R_4( B, id, A, kab, gx, s, p, y, k ) ]
    --[ Commit( B, A, <'R', 'I', gx, z, k> ), Secret( B, A, k ) ]->
     [ St_R_5( B, id, A, kab, gx, s, p, y, k ), Out( tag(k, <'R', gx>) )
     ]
    variants (modulo AC)
    1. p     = p.15
       s     = s.16
       y     = one
       z     = map(s.16, p.15)
    
    2. p     = p.16
       s     = s.17
       y     = y.18
       z     = map(s.17, p.16)^y.18
  */

rule (modulo E) I_recv4:
   [ In( t ), St_I_4( A, id, B, kab, x, s, p, gy, k ) ]
  --[
  Commit( A, B, <'I', 'R', map(s, p)^x, gy, k> ), Secret( A, B, k ),
  Finish( ), Eq( t, tag(k, <'R', map(s, p)^x>) )
  ]->
   [ St_I_5( A, id, B, kab, x, s, p, gy, k ) ]

  /*
  rule (modulo AC) I_recv4:
     [ In( t ), St_I_4( A, id, B, kab, x, s, p, gy, k ) ]
    --[
    Commit( A, B, <'I', 'R', z, gy, k> ), Secret( A, B, k ), Finish( ),
    Eq( t, tag(k, <'R', z>) )
    ]->
     [ St_I_5( A, id, B, kab, x, s, p, gy, k ) ]
    variants (modulo AC)
    1. p     = p.16
       s     = s.17
       x     = one
       z     = map(s.17, p.16)
    
    2. p     = p.18
       s     = s.19
       x     = x.21
       z     = map(s.19, p.18)^x.21
  */

restriction Equality:
  "∀ m1 m2 #i. (Eq( m1, m2 ) @ #i) ⇒ (m1 = m2)"
  // safety formula

restriction Inequality:
  "∀ m1 m2 #i. (NotEq( m1, m2 ) @ #i) ⇒ (¬(m1 = m2))"
  // safety formula

lemma injectiveagreementINITIATOR:
  all-traces
  "∀ a b t #i.
    ((Commit( a, b, <'I', 'R', t> ) @ #i) ∧
     (¬((∃ #r. Reveal( a ) @ #r) ∨ (∃ #r. Reveal( b ) @ #r)))) ⇒
    (∃ #j.
      (Running( b, a, <'I', 'R', t> ) @ #j) ∧
      (¬(∃ a2 b2 #i2.
          (Commit( a2, b2, <'I', 'R', t> ) @ #i2) ∧ (¬(#i2 = #i)))))"
/*
guarded formula characterizing all counter-examples:
"∃ a b t #i.
  (Commit( a, b, <'I', 'R', t> ) @ #i)
 ∧
  (∀ #r. (Reveal( a ) @ #r) ⇒ ⊥) ∧
  (∀ #r. (Reveal( b ) @ #r) ⇒ ⊥) ∧
  (∀ #j.
    (Running( b, a, <'I', 'R', t> ) @ #j)
   ⇒
    ∃ a2 b2 #i2.
     (Commit( a2, b2, <'I', 'R', t> ) @ #i2) ∧ ¬(#i2 = #i))"
*/
simplify
solve( Commit( a, b, <'I', 'R', t> ) @ #i )
  case I_recv4
  solve( St_I_4( a, id, b, kab, x, s, p, gy, k ) ▶₁ #i )
    case I_send3
    solve( !KU( tag(h(z), <'R', map(~s, ~p)^~x>) ) @ #vk )
      case c_tag
      solve( splitEqs(1) )
        case split_case_7
        solve( !KU( h(DH_neutral) ) @ #vk.2 )
          case c_h
          solve( !KU( map(~s, ~p)^~x ) @ #vk.5 )
            case I_send1
            SOLVED // trace found
          qed
        qed
      qed
    qed
  qed
qed

lemma Executability:
  exists-trace
  "∃ #i. (Finish( ) @ #i) ∧ (¬(∃ A #j. Reveal( A ) @ #j))"
/*
guarded formula characterizing all satisfying traces:
"∃ #i. (Finish( ) @ #i) ∧ ∀ A #j. (Reveal( A ) @ #j) ⇒ ⊥"
*/
simplify
solve( St_I_4( A, id, B, kab, x, s, p, gy, k ) ▶₁ #i )
  case I_send3
  solve( !KU( tag(h(z), <'R', map(~s, ~p)^~x>) ) @ #vk )
    case c_tag
    solve( splitEqs(1) )
      case split_case_7
      solve( !KU( h(DH_neutral) ) @ #vk.2 )
        case c_h
        solve( !KU( map(~s, ~p)^~x ) @ #vk.5 )
          case I_send1
          SOLVED // trace found
        qed
      qed
    qed
  qed
qed

lemma injectiveagreementRESPONDER:
  all-traces
  "∀ a b t #i.
    ((Commit( a, b, <'R', 'I', t> ) @ #i) ∧
     (¬((∃ #r. Reveal( a ) @ #r) ∨ (∃ #r. Reveal( b ) @ #r)))) ⇒
    (∃ #j.
      (Running( b, a, <'R', 'I', t> ) @ #j) ∧
      (¬(∃ a2 b2 #i2.
          (Commit( a2, b2, <'R', 'I', t> ) @ #i2) ∧ (¬(#i2 = #i)))))"
/*
guarded formula characterizing all counter-examples:
"∃ a b t #i.
  (Commit( a, b, <'R', 'I', t> ) @ #i)
 ∧
  (∀ #r. (Reveal( a ) @ #r) ⇒ ⊥) ∧
  (∀ #r. (Reveal( b ) @ #r) ⇒ ⊥) ∧
  (∀ #j.
    (Running( b, a, <'R', 'I', t> ) @ #j)
   ⇒
    ∃ a2 b2 #i2.
     (Commit( a2, b2, <'R', 'I', t> ) @ #i2) ∧ ¬(#i2 = #i))"
*/
simplify
solve( Commit( a, b, <'R', 'I', t> ) @ #i )
  case R_send4
  solve( St_R_4( a, id, b, kab, gx, s, p, y, k ) ▶₀ #i )
    case R_recv3
    solve( splitEqs(1) )
      case split_case_1
      solve( !KU( tag(h(z), <'I', map(sdec(c, h(~k)), p)^~y>) ) @ #vk )
        case c_tag
        solve( splitEqs(2) )
          case split_case_7
          solve( !KU( h(DH_neutral) ) @ #vk.6 )
            case c_h
            solve( !KU( map(sdec(c, h(~k)), p)^~y ) @ #vk.9 )
              case R_send2_case_1
              SOLVED // trace found
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma secrecy:
  all-traces
  "∀ A B x #i.
    ((Secret( A, B, x ) @ #i) ∧
     (¬((∃ #r. Reveal( A ) @ #r) ∨ (∃ #r. Reveal( B ) @ #r)))) ⇒
    (¬(∃ #j. K( x ) @ #j))"
/*
guarded formula characterizing all counter-examples:
"∃ A B x #i.
  (Secret( A, B, x ) @ #i)
 ∧
  (∀ #r. (Reveal( A ) @ #r) ⇒ ⊥) ∧
  (∀ #r. (Reveal( B ) @ #r) ⇒ ⊥) ∧
  (∃ #j. (K( x ) @ #j))"
*/
simplify
solve( Secret( A, B, x ) @ #i )
  case I_recv4
  solve( St_I_4( A, id, B, kab, x.1, s, p, gy, x ) ▶₁ #i )
    case I_send3
    solve( !KU( tag(h(z), <'R', map(~s, ~p)^~x>) ) @ #vk.1 )
      case c_tag
      solve( splitEqs(1) )
        case split_case_7
        solve( !KU( h(DH_neutral) ) @ #vk.1 )
          case c_h
          solve( !KU( map(~s, ~p)^~x ) @ #vk.5 )
            case I_send1
            SOLVED // trace found
          qed
        qed
      qed
    qed
  qed
qed



















/* All wellformedness checks were successful. */

/*
Generated from:
Tamarin version 1.8.0
Maude version 3.1
Git revision: f172d7f00b1485446a1e7a42dc14623c2189cc42, branch: master
Compiled at: 2023-09-01 08:49:23.916032222 UTC
*/

end